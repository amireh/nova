#!/usr/bin/env bash

declare -g NOVA_DIR="${NOVA_DIR:-$HOME/.nova}"
declare -a nova_program
declare    nova_profile

nova-getopts() {
  while [[ $# -gt 0 ]]; do
    case $1 in
      -p|--profile)
        if [[ -d $2 ]]; then
          nova_profile="$2"
        else
          nova_profile="$NOVA_DIR/$2"
        fi

        shift 2
      ;;

      -h|--help)
        echo -e "usage: nova [options] [--] [program...]"
        echo -e ""
        echo -e "  -p, --profile NAME  name or path to the profile to use"
        echo -e "      --no-rc         do not use the .novarc file"
        echo -e "  -h, --help          print this help listing"
        echo -e
        echo -e "report bugs to <https://github.com/amireh/nova>"
        exit 0
      ;;

      # forward rest of options to program:
      --) shift 1; nova_program+=("$@"); break ;;

      # program option:
      *) nova_program+=("$1") ; shift 1 ;;
    esac
  done
}

nova-spawn() {
  if [[ -x $1 ]]; then
    "$1"
  else
    "${SHELL:-bash}" "$1"
  fi
}

nova-exec() {
  local var_name
  local envbuf=()

  for file in "$nova_profile"/*; do
    # skip files ending with ~ and skip directories
    if [[ $file =~ ~$ || -d $file ]]; then
      continue
    elif [[ $file == \*$ ]]; then
      echo "nova: no files found in $nova_profile" 1>&2
      return 1
    fi

    read -r var_name < <(basename "$file" | sed 's/^[0-9]*-//')
    read -r "$var_name" < <(nova-spawn "$file") || {
      echo "nova: unable to evaluate $var_name" 1>&2
      return 1
    }

    export "$var_name" || return $?

    envbuf+=("${var_name}=${!var_name}")
  done

  envbuf="$(IFS=$'\n' ; echo "${envbuf[*]}")"

  exec "$@" 3<<< "$envbuf"
}

nova-getopts "$@" || exit $?

if [[ ! -d $nova_profile ]]; then
  echo "nova: missing profile" 1>&2
  exit 1
fi

if [[ ${#nova_program} -eq 0 ]]; then
  nova_program=("cat" "/dev/fd/3")
fi

nova-exec "${nova_program[@]}"
