#!/usr/bin/env bash

declare spec_exit_code
declare spec_filter
declare -a spec_dir
declare tty_color
declare -a specs

while [[ $# -gt 0 ]]; do
  case "$1" in
    -f|--filter) spec_filter="$2" ; shift 2 ;;
    *) spec_dir+=("$1") ; shift ;;
  esac
done

# scan the available tests & filter them:
for dir in "${spec_dir[@]}"; do
  read -d '' -r -a dir_specs < <(
    find "$dir" -type f -name '*.sh' | grep -ie "${spec_filter}"
  )

  specs+=("${dir_specs[@]}")
done

for spec in "${specs[@]}"; do
  spec_name="$(basename "${spec}")"
  spec_name="${spec_name/.sh/}"
  spec_header="${tty_color}${spec_name}\033[0m |"

  # grab the next color in the palette to use for this test's header:
  tty_color="$(bb-colorize "$tty_color")"

  # run the test:
  bb-logprefix "$spec_header" echo "starting" 1>&2
  bb-logprefix "$spec_header" bash "$spec"

  spec_exit_code=$?

  # fail as soon as any test fails:
  if [[ $spec_exit_code -eq 0 ]]; then
    bb-logprefix "$spec_header" echo -e "\033[32mok!\033[0m" 1>&2
  else
    bb-logprefix "$spec_header" echo -e "\033[31mfailed!\033[0m (exit code $spec_exit_code)" 1>&2

    exit $spec_exit_code
  fi
done
